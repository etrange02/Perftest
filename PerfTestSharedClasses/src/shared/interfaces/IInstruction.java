/**
 * 
 */
package shared.interfaces;

/**
 * 
 * @author David Lecoconnier david.lecoconnier@gmail.com
 * @author Jean-Luc Amitousa-Mankoy jeanluc.amitousa.mankoy@gmail.com
 * @version 1.0
 */
public interface IInstruction {

	/**
	 * Returns the name of the instruction
	 * @return the name
	 */
	public String getName();

	/**
	 * Returns the readable request
	 * @return the request
	 */
	public String getReadableRequest();

	/**
	 * Returns the binary request
	 * @return the request
	 */
	public byte[] getBinaryRequest();

	/**
	 * Returns the binary response
	 * @return the response
	 */
	public byte[] getBinaryResponse();

	/**
	 * Turns the instruction into a JSON string
	 * @return a JSON string
	 */
	public String writeJSONString();

	/**
	 * Modifies the instruction name
	 * @param name a new name
	 */
	public void setName(String name);

	/**
	 * Modifies the readable request, that is to say the request written by the user
	 * @param readableRequest a request
	 */
	public void setReadableRequest(String readableRequest);

	/**
	 * Modifies the binary request. It is generated by the application
	 * @param binaryRequest a request
	 */
	public void setBinaryRequest(byte[] binaryRequest);

	/**
	 * Modifies the binary response. It is received while processing a white test
	 * @param binaryResponse a response
	 */
	public void setBinaryResponse(byte[] binaryResponse);
	
}